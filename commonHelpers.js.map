{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst form = document.querySelector(\".search-form\")\nconst galleryUl = document.querySelector(\".gallery\")\nconst loader = document.querySelector('.loader')\n\nconst URL = \"https://pixabay.com/api\"\nconst KEY = \"42188740-c0be7e81c485970d884fe2cff\"\nconst serverRequest = `${URL}?key=${KEY}`\n\n\n\nform.addEventListener(\"submit\", searchImg)\nloader.style.display = \"none\";\n\n\nfunction searchImg(evt) {\n    evt.preventDefault()\n    loader.style.display = \"block\"\n    const searchItem = evt.currentTarget.elements.query.value;\n    fetchPhoto(searchItem).then((data) => {\n        loader.style.display = \"none\"\n        if (!data.hits.length) {\n            iziToast.error({\n                title: \"Error\",\n                message:\n                    \"Sorry, there are no images matching your search query. Please try again!\",\n            })\n        }\n        \n        galleryUl.innerHTML = galerryMarkup(data.hits)\n        const refreshPage = new SimpleLightbox(\".gallery a\", {\n            captionsData: \"alt\",\n            captionDelay: 250,\n        });\n       refreshPage.refresh()    \n\n    }).catch((err) => console.log(err)).finally(form.reset())\n}\n \nfunction fetchPhoto(photo) {\n    return fetch(`${serverRequest}&q=${photo}&image_type=photo&orientation=horizontal&safesearch=true`)\n        .then((photo) => {\n            if (!photo.ok) {\n                throw new Error(photo.statusText)\n            }\n            return photo.json()\n        }).catch((err) => console.log(err))\n}\n\n\nfunction galerryMarkup(arr) {\n    return arr\n        .map(\n            ({ webformatURL,\n                largeImageURL,\n                tags,\n                likes,\n                views,\n                comments,\n                downloads, }) => `\n  <li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n    />\n    <p class= \"gallery-descr\">• Likes: ${likes} • Views: ${views} • Comments: ${comments} •</span> Downloads:${downloads}</p>\n  </a>\n</li>\n  `)\n    .join(\"\")\n}\n/*form.addEventListener(\"submit\", searchImage)\nfunction searchImage(e) {\n    e.preventDefault()\n    const queryInp = e.target;\n    const query = queryInp.elements.query.value;\n   \n    fetchPhoto(query).then(data => {\n        if (data.totalHits.length = 0) {\n            throw new iziToast.error({\n                title: 'Error',\n                message:\n                    'Sorry, there are no images matching your search query. Please try again!',\n            })\n     \n      galleryUl.innerHTML = galleryMarkup(data.hits);\n      const refreshPage = new SimpleLightbox('.gallery a', {\n          captionsData: 'alt',\n          captionDelay: 250,\n        });\n        refreshPage.refresh();\n        form.reset();\n        \n    }\n    } ).catch(onFetchError)\n}\n\nfunction fetchPhoto(photo) {\n    return fetch(`${serverRequest}&q=${photo}&image_type=photo&orientation=horizontal&safesearch=true`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.statusText)\n            }\n            return resp.json()\n        })\n}\n\nfunction galerryMarkup(arr) {\n  return arr\n    .map(\n      ({ webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads, }) => `\n  <li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"\n      alt=\"${tags}\"\n    />\n    <p class= \"gallery-descr\">• Likes: ${likes} • Views: ${views} • Comments: ${comments} •</span> Downloads:${downloads}</p>\n  </a>\n</li>\n  `\n    )\n    .join('');\n    \n}*/\n"],"names":["form","galleryUl","loader","URL","KEY","serverRequest","searchImg","evt","searchItem","fetchPhoto","data","iziToast","galerryMarkup","SimpleLightbox","err","photo","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads"],"mappings":"6vBAQA,MAAMA,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAS,SAAS,cAAc,SAAS,EAEzCC,EAAM,0BACNC,EAAM,qCACNC,EAAgB,GAAGF,CAAG,QAAQC,CAAG,GAIvCJ,EAAK,iBAAiB,SAAUM,CAAS,EACzCJ,EAAO,MAAM,QAAU,OAGvB,SAASI,EAAUC,EAAK,CACpBA,EAAI,eAAgB,EACpBL,EAAO,MAAM,QAAU,QACvB,MAAMM,EAAaD,EAAI,cAAc,SAAS,MAAM,MACpDE,EAAWD,CAAU,EAAE,KAAME,GAAS,CAClCR,EAAO,MAAM,QAAU,OAClBQ,EAAK,KAAK,QACXC,EAAS,MAAM,CACX,MAAO,QACP,QACI,0EACpB,CAAa,EAGLV,EAAU,UAAYW,EAAcF,EAAK,IAAI,EACzB,IAAIG,EAAe,aAAc,CACjD,aAAc,MACd,aAAc,GAC1B,CAAS,EACU,QAAS,CAEvB,CAAA,EAAE,MAAOC,GAAQ,QAAQ,IAAIA,CAAG,CAAC,EAAE,QAAQd,EAAK,MAAK,CAAE,CAC5D,CAEA,SAASS,EAAWM,EAAO,CACvB,OAAO,MAAM,GAAGV,CAAa,MAAMU,CAAK,0DAA0D,EAC7F,KAAMA,GAAU,CACb,GAAI,CAACA,EAAM,GACP,MAAM,IAAI,MAAMA,EAAM,UAAU,EAEpC,OAAOA,EAAM,KAAM,CAC/B,CAAS,EAAE,MAAOD,GAAQ,QAAQ,IAAIA,CAAG,CAAC,CAC1C,CAGA,SAASF,EAAcI,EAAK,CACxB,OAAOA,EACF,IACG,CAAC,CAAE,aAAAC,EACC,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CAAY,IAAK;AAAA;AAAA,kCAECL,CAAa;AAAA;AAAA;AAAA,aAGlCD,CAAY;AAAA,aACZE,CAAI;AAAA;AAAA,yCAEwBC,CAAK,aAAaC,CAAK,gBAAgBC,CAAQ,uBAAuBC,CAAS;AAAA;AAAA;AAAA,GAGrH,EACE,KAAK,EAAE,CACZ"}